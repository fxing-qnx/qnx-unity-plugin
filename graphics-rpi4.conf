begin khronos

  begin egl display 1
    egl-dlls = libglapi-mesa.so libEGL-mesa.so
    glesv2-dlls = libglapi-mesa.so libGLESv2-mesa.so
    gpu-dlls = gpu_drm-rpi4.so
    vk-icds = broadcom_icd.json
    vk-exps = /usr/lib/graphics/vulkan/VkLayer_khronos_validation.json
  end egl display

  begin wfd device 1
    wfd-dlls = libwfdcfg-rpi4-generic.so libWFDrpi4-drm-atomic.so

    # Run "drm-probe-displays" to list the available displays and pipelines,
    # and "use $GRAPHICS_ROOT/libWFDrpi4-drm.so" for more information on
    # these driver-specific settings.

    # Here is displays map for Raspberry Pi 4:
    # display 1: HDMI-A
    # display 2: HDMI-A

    # Pipeline IDs 1 to 9 are used for DRM CRTCs.  One should be assigned
    # to each display that will be used.
    pipeline1-display = 1
    pipeline2-display = 2
  end wfd device

end khronos

begin winmgr

  begin globals
    default-display = 1
    stack-size = 65536  # in units of bytes
    blit-config = rpi4drm
    alloc-config = rpi4drm
    requests-logsize = 65536
    blits-logsize = 4096
    input = keyboard mouse
    keymap = /system/share/keyboard/en_US_101
  end globals

  begin display 1
    video-mode = 1920 x 1080 @ 60
    stack-size = 65536  # in units of bytes
    force-composition = true
    cursor = on # has to be on, otherwise it takes 10s to initializen
  end display

  begin display 2
    video-mode = 1920 x 1080 @ 60
    stack-size = 65536  # in units of bytes
   force-composition = true
  end display

  begin class framebuffer-1
    display = 1
    pipeline = 1
    buffer-count = 3
    format = rgba8888
    usage = gles2blt physical
    #usage = rpi4drm physical
  end class

  begin class framebuffer-2
    display = 2
    pipeline = 2
    buffer-count = 3
    format = rgba8888
    usage = rpi4drm physical
  end class

  begin virtual display
    id_string = virtual-1
    video-mode = 1920 x 1080 @ 60
    format = rgba8888
    usage = vmwgfxdrm read write native physical
  end virtual display

end winmgr
